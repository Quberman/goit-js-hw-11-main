{"version":3,"sources":["js/promisification2.js"],"names":["users","name","active","toggleUserState","allUsers","userName","Promise","resolve","reject","map","user","logger","updatedUsers","console","table","then"],"mappings":";AAAA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IACxB,IAAIC,QAAQ,CAACC,EAASC,KACJJ,EAASK,IAAIC,IAC1BA,EAAKT,OAASI,GACdE,EAAQ,IAAKG,EAAMR,QAASQ,EAAKR,aAM3CS,EAASC,GAAgBC,QAAQC,MAAMF,GAK7CT,EAAgBH,EAAO,SAASe,KAAKJ,GACrCR,EAAgBH,EAAO,OAAOe,KAAKJ","file":"promisification2.33091d37.js","sourceRoot":"../src","sourcesContent":["const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    return new Promise((resolve, reject) => {\n        const updatedUsers = allUsers.map(user => {\n            if (user.name === userName) {\n                resolve({ ...user, active: !user.active});\n            }\n        });\n    });\n}\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n// /*\n//  * Должно работать так\n//  */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);"]}